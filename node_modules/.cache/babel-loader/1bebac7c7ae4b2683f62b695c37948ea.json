{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mihae\\\\OneDrive\\\\Desktop\\\\Front-End Dev. Course\\\\course29-project\\\\src\\\\components\\\\post\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Header, UserDetails, Avatar, UserFullName, PostDate, ContentWrapper, UserActions, ActionButton, Label, Count, ActionUserList } from './Post.style';\nimport { users } from '../../data/users';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisV, faHeart, faComments, faRetweet } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Post = ({\n  postData\n}) => {\n  _s();\n\n  const [hasInteracted, setHasInteracted] = useState({\n    li\n  });\n\n  function getAuthorData(id) {\n    return users.find(user => user.id === id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(UserDetails, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: getAuthorData(postData.author).avatar.small\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(UserFullName, {\n            children: `${getAuthorData(postData.author).first_name} \n                     ${getAuthorData(postData.author).last_name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(PostDate, {\n            children: postData.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faEllipsisV\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: [postData.content.text !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: postData.content.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), postData.content.video !== undefined && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: postData.content.video,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), postData.content.image.length > 0 && postData.content.image.map((source, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: source,\n        alt: `${getAuthorData(postData.author).first_name} \n             ${getAuthorData(postData.author).last_name}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 61\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserActions, {\n      children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n        children: [postData.likes.length > 0 && /*#__PURE__*/_jsxDEV(ActionUserList, {\n          children: postData.likes.map((user, index) => {\n            const currentUser = getAuthorData(user);\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [currentUser.first_name, \" \", currentUser.last_name]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faHeart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), postData.likes.length > 0 && /*#__PURE__*/_jsxDEV(Count, {\n          children: postData.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        children: [postData.comments.length > 0 && /*#__PURE__*/_jsxDEV(ActionUserList, {\n          children: postData.comments.map((comment, index) => {\n            const currentUser = getAuthorData(comment.user);\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [currentUser.first_name, \" \", currentUser.last_name]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faComments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), postData.comments.length > 0 && /*#__PURE__*/_jsxDEV(Count, {\n          children: postData.comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        children: [postData.shares.length > 0 && /*#__PURE__*/_jsxDEV(ActionUserList, {\n          children: postData.shares.map((share, index) => {\n            const currentUser = getAuthorData(share);\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [currentUser.first_name, \" \", currentUser.last_name]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faRetweet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Shares\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), postData.shares.length > 0 && /*#__PURE__*/_jsxDEV(Count, {\n          children: postData.shares.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Post, \"RFb92TBY64apG/E9ZOxnedIwMYI=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/mihae/OneDrive/Desktop/Front-End Dev. Course/course29-project/src/components/post/Post.js"],"names":["React","useState","Container","Header","UserDetails","Avatar","UserFullName","PostDate","ContentWrapper","UserActions","ActionButton","Label","Count","ActionUserList","users","FontAwesomeIcon","faEllipsisV","faHeart","faComments","faRetweet","Post","postData","hasInteracted","setHasInteracted","li","getAuthorData","id","find","user","author","avatar","small","first_name","last_name","date","content","text","undefined","video","image","length","map","source","index","likes","currentUser","comments","comment","shares","share"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Header, UserDetails, Avatar, UserFullName, PostDate, ContentWrapper, UserActions, ActionButton, Label, Count, ActionUserList } from './Post.style';\r\nimport { users } from '../../data/users';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEllipsisV, faHeart, faComments, faRetweet } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Post = ({postData}) => {\r\n   const [hasInteracted, setHasInteracted] = useState({\r\n     li\r\n   })\r\n   \r\n    function getAuthorData(id) {\r\n      return users.find((user) => user.id === id)\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Header>\r\n           <UserDetails>\r\n             <Avatar src={getAuthorData(postData.author).avatar.small}/>\r\n             <div>\r\n                 <UserFullName>\r\n                     {`${getAuthorData(postData.author).first_name} \r\n                     ${getAuthorData(postData.author).last_name}`}\r\n                 </UserFullName>\r\n                 <PostDate>{postData.date}</PostDate>\r\n             </div>\r\n           </UserDetails>\r\n           <FontAwesomeIcon icon={faEllipsisV} />\r\n        </Header> \r\n        <ContentWrapper>\r\n            {postData.content.text !== undefined &&\r\n             (<p>{postData.content.text}</p>)}\r\n            {postData.content.video !== undefined && \r\n             (<video src={postData.content.video} controls/>)}\r\n            {postData.content.image.length > 0 && \r\n             postData.content.image.map((source, index) => (<img src={source} key={index} alt={`${getAuthorData(postData.author).first_name} \r\n             ${getAuthorData(postData.author).last_name}`} /> ))} \r\n        </ContentWrapper>\r\n\r\n        <UserActions>\r\n          <ActionButton>\r\n            {postData.likes.length > 0 && (\r\n              <ActionUserList>\r\n              {postData.likes.map((user, index) => {\r\n                const currentUser = getAuthorData(user);\r\n                return ( \r\n                  <span key={index}>\r\n                    {currentUser.first_name} {currentUser.last_name}\r\n                  </span>\r\n                );\r\n              })}\r\n            </ActionUserList>\r\n            )}\r\n            <FontAwesomeIcon icon={faHeart} />\r\n            <Label>Likes</Label>\r\n            {postData.likes.length > 0 && (<Count>{postData.likes.length}</Count>)}\r\n          </ActionButton>\r\n\r\n          <ActionButton>\r\n            {postData.comments.length > 0 && (\r\n              <ActionUserList>\r\n              {postData.comments.map((comment, index) => {\r\n                const currentUser = getAuthorData(comment.user);\r\n                return ( \r\n                  <span key={index}>\r\n                    {currentUser.first_name} {currentUser.last_name}\r\n                  </span>\r\n                );\r\n              })}\r\n            </ActionUserList>\r\n            )}\r\n            <FontAwesomeIcon icon={faComments} />\r\n            <Label>Comment</Label>\r\n            {postData.comments.length > 0 && (<Count>{postData.comments.length}</Count>)}\r\n          </ActionButton>\r\n\r\n          <ActionButton>\r\n           {postData.shares.length > 0 && (\r\n              <ActionUserList>\r\n              {postData.shares.map((share, index) => {\r\n                const currentUser = getAuthorData(share);\r\n                return ( \r\n                  <span key={index}>\r\n                    {currentUser.first_name} {currentUser.last_name}\r\n                  </span>\r\n                );\r\n              })}\r\n            </ActionUserList>\r\n           )}\r\n            <FontAwesomeIcon icon={faRetweet} />\r\n            <Label>Shares</Label>\r\n            {postData.shares.length > 0 && (<Count>{postData.shares.length}</Count>)}\r\n          </ActionButton>\r\n        </UserActions>\r\n      </Container>\r\n    );\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}