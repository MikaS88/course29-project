{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mihae\\\\OneDrive\\\\Desktop\\\\Front-End Dev. Course\\\\course29-project\\\\src\\\\components\\\\header\\\\Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, DropdownList, DropdownItem, Img, Content, Status } from \"./Dropdown.style\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Dropdown = ({\n  icon,\n  elements\n}) => {\n  _s();\n\n  const [items, setItems] = useState(elements);\n  const [isOpen, setIsopen] = useState(false);\n\n  function setReadStatus(index) {\n    const changedState = items.map((item, i) => {\n      if (index === i) {\n        return item = { ...item,\n          read: true\n        };\n      } else {\n        return item;\n      }\n    });\n    setItems(changedState);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: icon,\n      onClick: () => setIsopen(!isOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownList, {\n      isOpen: isOpen,\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(DropdownItem, {\n        onClick: () => setReadStatus(index),\n        children: [/*#__PURE__*/_jsxDEV(Img, {\n          src: item.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.content.substring()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Status, {\n          isRead: item.read\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdown, \"Q2gqvJuNgQ5RuyD/2LUgQo9v3fo=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Users/mihae/OneDrive/Desktop/Front-End Dev. Course/course29-project/src/components/header/Dropdown.js"],"names":["React","useState","Container","DropdownList","DropdownItem","Img","Content","Status","FontAwesomeIcon","Dropdown","icon","elements","items","setItems","isOpen","setIsopen","setReadStatus","index","changedState","map","item","i","read","avatar","fullName","content","substring"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,GAJF,EAKEC,OALF,EAMEC,MANF,QAOO,kBAPP;AAQA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACU,QAAD,CAAlC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;;AAEA,WAASe,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,UAAMC,YAAY,GAAGN,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC3C,UAAIJ,KAAK,KAAKI,CAAd,EAAiB;AACf,eAASD,IAAI,GAAG,EACd,GAAGA,IADW;AAEdE,UAAAA,IAAI,EAAE;AAFQ,SAAhB;AAID,OALD,MAKO;AACL,eAAOF,IAAP;AACD;AACH,KATsB,CAArB;AAUFP,IAAAA,QAAQ,CAACK,YAAD,CAAR;AACD;;AAEC,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAER,IAAvB;AAA6B,MAAA,OAAO,EAAE,MAAMK,SAAS,CAAC,CAACD,MAAF;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,MAAtB;AAAA,gBACGF,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOH,KAAP,kBACT,QAAC,YAAD;AAA0B,QAAA,OAAO,EAAE,MAAMD,aAAa,CAACC,KAAD,CAAtD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,GAAG,EAAEG,IAAI,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA,kCACE;AAAA,sBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAOJ,IAAI,CAACK,OAAL,CAAaC,SAAb;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEN,IAAI,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAAmBL,KAAnB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAnCD;;GAAMR,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  DropdownList,\r\n  DropdownItem,\r\n  Img,\r\n  Content,\r\n  Status,\r\n} from \"./Dropdown.style\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Dropdown = ({ icon, elements }) => {\r\n  const [items, setItems] = useState(elements);\r\n  const [isOpen, setIsopen] = useState(false);\r\n\r\n  function setReadStatus(index) {\r\n    const changedState = items.map((item, i) => {\r\n     if (index === i) {\r\n       return ( item = {\r\n         ...item,\r\n         read: true,\r\n       });\r\n     } else {\r\n       return item;\r\n     }\r\n  });\r\n  setItems(changedState)\r\n}\r\n\r\n  return (\r\n    <Container>\r\n      <FontAwesomeIcon icon={icon} onClick={() => setIsopen(!isOpen)} />\r\n      <DropdownList isOpen={isOpen}>\r\n        {items.map((item, index) => (\r\n          <DropdownItem key={index} onClick={() => setReadStatus(index)}>\r\n            <Img src={item.avatar} />\r\n            <Content>\r\n              <p>{item.fullName}</p>\r\n              <span>{item.content.substring()}</span>\r\n            </Content>\r\n            <Status isRead={item.read} />\r\n          </DropdownItem>\r\n        ))}\r\n      </DropdownList>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"]},"metadata":{},"sourceType":"module"}